AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Customer Feedback System with Sentiment Analysis

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        FEEDBACK_TABLE: !Ref FeedbackTable
        STATISTICS_TABLE: !Ref StatisticsTable

Resources:
  # API Gateway
  FeedbackApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,POST,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

  # Lambda Functions
  PostFeedbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: src/handlers/postFeedback.handler
      Events:
        PostFeedback:
          Type: Api
          Properties:
            RestApiId: !Ref FeedbackApi
            Path: /feedback
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FeedbackTable
        - DynamoDBCrudPolicy:
            TableName: !Ref StatisticsTable
        - Statement:
            - Effect: Allow
              Action:
                - comprehend:DetectSentiment
              Resource: '*'

  GetFeedbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: backend/
      Handler: src/handlers/getFeedback.handler
      Events:
        GetFeedback:
          Type: Api
          Properties:
            RestApiId: !Ref FeedbackApi
            Path: /feedback
            Method: get
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref FeedbackTable
        - DynamoDBReadPolicy:
            TableName: !Ref StatisticsTable

  # DynamoDB Tables
  FeedbackTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-feedback'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
        - AttributeName: idempotencyKey
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: IdempotencyIndex
          KeySchema:
            - AttributeName: idempotencyKey
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  StatisticsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${AWS::StackName}-statistics'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: id
          AttributeType: S
      KeySchema:
        - AttributeName: id
          KeyType: HASH

  # S3 Bucket for Frontend
  FrontendBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${AWS::StackName}-frontend-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: giveFeedback.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref FrontendBucket
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub '${FrontendBucket}/*'

Outputs:
  FeedbackApi:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub 'https://${FeedbackApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/'
    Export:
      Name: !Sub '${AWS::StackName}-api-url'

  FrontendURL:
    Description: S3 Website URL for Frontend
    Value: !GetAtt FrontendBucket.WebsiteURL
    Export:
      Name: !Sub '${AWS::StackName}-frontend-url'

  FeedbackTableName:
    Description: DynamoDB table name for feedback
    Value: !Ref FeedbackTable
    Export:
      Name: !Sub '${AWS::StackName}-feedback-table'

  StatisticsTableName:
    Description: DynamoDB table name for statistics
    Value: !Ref StatisticsTable
    Export:
      Name: !Sub '${AWS::StackName}-statistics-table'